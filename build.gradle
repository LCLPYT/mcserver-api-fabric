import work.lclpnet.build.task.GithubDeploymentTask

plugins {
    id 'java'
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'gradle-build-utils' version '1.7.0'
}

Properties props = buildUtils.loadProperties('publish.properties')

group = project.maven_group
version = buildUtils.gitVersion()

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }
}

configurations {
    provide {
        transitive = false
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "work.lclpnet.mods.kibu:kibu:${project.kibu_version}"

    implementation 'org.json:json:20231013'
    compileOnly 'org.jetbrains:annotations:24.1.0'

    include(implementation('work.lclpnet:json-config4j:1.0.0'))
    include(implementation("work.lclpnet:lclpnetwork-api:${project.lclpnetwork_api_version}"))
    include(implementation("work.lclpnet:lclpstorage:${project.lclpstorage_version}"))
    include(localRuntime(compileOnly("work.lclpnet:translations4j:${project.translations4j_version}:network")))

    provide(localRuntime(compileOnly("work.lclpnet.mcserver-api:mcserver-api-base:${project.mcserver_api_base_version}")))

    // test dependencies
    testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
}

loom {
    serverOnlyMinecraftJar()

    runs {
        remove client
    }
}

test {
    useJUnitPlatform()
    systemProperty('fabric.side', 'server')
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(21)
}

processResources {
    // replace placeholders in resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from configurations.provide
}

[jar, sourcesJar].each {
    it.from("LICENSE.md") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

def env = System.getenv()

tasks.register("github", GithubDeploymentTask) {
    dependsOn tasks.remapJar

    config {
        token = env.get("GITHUB_TOKEN")
        repository = env.get("GITHUB_REPOSITORY")
    }

    release {
        title = "[$project.minecraft_version] $project.name $project.version"
        tag = buildUtils.latestTag()
    }

    assets.add(tasks.remapJar.archiveFile.get())
}

publishing {
    buildUtils.setupPublishRepository(repositories, props)

    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            from components.java

            pom {
                name = 'MCServer Fabric Implementation'
                description = 'A Java library to manage Minecraft server backend interaction with LCLPNetwork. For Fabric.'
            }
        }
    }
}